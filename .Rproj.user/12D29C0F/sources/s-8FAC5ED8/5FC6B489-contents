mam<-read.csv(file.choose(), header=T)
library(ggplot2)
library(psych)

str(mam)

#Descriptive Statistics
  describe(mam$BrainWeight)
  describe(mam$GestationTime)

#Histograms and boxplots
  qplot(mam$GestationTime, xlab = "Gestation Time in Days", main = "Gestation Time", binwidth=50) + theme_bw()
  qplot(mam$BrainWeight, xlab = "Brain Weight in Grams", main = "Brain Weight", binwidth=100) + theme_bw()
  boxplot(mam$GestationTime, ylab = "Gestation Time in Days", main = "Gestation Time")
  boxplot(mam$BrainWeight, ylab = "Brain Weight in Grams", main = "Brain Weight")

##Basic Scatterplot
  ggplot(mam, aes(x=BrainWeight, y=GestationTime)) + geom_point(shape=16, size=3) + 
    labs(x = "Brain Weight in Grams",y="Gestation Time in Days", title="Gestation Time vs Brain Weight")+theme_bw()+
    theme(plot.title = element_text(hjust=0.5, size = rel(2)))+    ##Change size of text in title
    theme(axis.title.y = element_text(size = rel(1.4)))+    ##Change size of label text in y-axis label
    theme(axis.title.x = element_text(size = rel(1.4)))+    ##Change size of label text in x-axis label
    theme(axis.text.x = element_text(size = rel(1.6)))+    ##Change size of tick text in y-axis label
    theme(axis.text.y = element_text(size = rel(1.6)))+    ##Change size of tick text in x-axis label
    geom_smooth(method="lm", se=FALSE)


##Correlation
  cor(mam$BrainWeight, mam$GestationTime)
  ##r=.62

##Simple Linear Regression Model
  modelMam <- lm(GestationTime~BrainWeight, data=mam)
  summary(modelMam)

##Checking Assumptions

  ##Create a data frame including results from the lm() function
    outMam = fortify(modelMam)
    head(outMam)

##Basic Scatterplot with extreme residuals (> 2) labeled
  ##Names of mammals are in the mam data frame, not in the outMam data frame.
  ##We need to merge the names into the outMam data frame.
    outMamNames <- merge(mam$Species, outMam, by ="row.names")  ##Note that outMamNames$x = mam$Species
    outMamNames <- outMamNames[order(outMamNames$x),]   ##Merging changes the order of the rows, this sorts it alphabetical again.

  ##The following code puts labels on ALL points, too messy.
  ggplot(outMamNames, aes(x=BrainWeight, y=GestationTime)) + geom_point(shape=16, size=3) + 
    labs(x = "Brain Weight in Grams",y="Gestation Time in Days", title="Gestation Time vs Brain Weight")+theme_bw()+
    theme(plot.title = element_text(hjust=0.5, size = rel(2)))+    ##Change size of text in title
    theme(axis.title.y = element_text(size = rel(1.4)))+    ##Change size of label text in y-axis label
    theme(axis.title.x = element_text(size = rel(1.4)))+    ##Change size of label text in x-axis label
    theme(axis.text.x = element_text(size = rel(1.6)))+    ##Change size of tick text in y-axis label
    theme(axis.text.y = element_text(size = rel(1.6)))+    ##Change size of tick text in x-axis label
    geom_smooth(method="lm", se=FALSE)+
    geom_text(data=subset(outMamNames), aes(x=BrainWeight, y=GestationTime,label=x), vjust=1.5)

  ##The following code labels points with standardized residuals > 2 or < -2.
  ggplot(outMamNames, aes(x=BrainWeight, y=GestationTime)) + geom_point(shape=16, size=3) + 
    labs(x = "Brain Weight in Grams",y="Gestation Time in Days", title="Gestation Time vs Brain Weight")+theme_bw()+
    theme(plot.title = element_text(hjust=0.5, size = rel(2)))+    ##Change size of text in title
    theme(axis.title.y = element_text(size = rel(1.4)))+    ##Change size of label text in y-axis label
    theme(axis.title.x = element_text(size = rel(1.4)))+    ##Change size of label text in x-axis label
    theme(axis.text.x = element_text(size = rel(1.6)))+    ##Change size of tick text in y-axis label
    theme(axis.text.y = element_text(size = rel(1.6)))+    ##Change size of tick text in x-axis label
    geom_smooth(method="lm", se=FALSE)+
    geom_text(data=subset(outMamNames, .stdresid > 2 | .stdresid < -2),   ## | means "or"
        aes(x=BrainWeight, y=GestationTime,label=x), vjust=1.5)

  ##Create residual plot with predicted values on x-axis and STUDENTIZED residuals on y-axis
    ggplot(outMamNames, aes(x=.fitted, y=.stdresid)) + geom_point(shape=16, size=3) + 
      labs(x = "Predicted Gestation",y="Studentized Residuals",title="Studentized Residual Plot")+
      theme_bw()+geom_hline(yintercept=0)+ylim(-5, 5)+
      geom_text(data=subset(outMamNames, .stdresid > 2 | .stdresid < -2),   ## | means "or"
            aes(x=.fitted, y=.stdresid,label=x), vjust=1.5)+
      theme(plot.title = element_text(hjust=0.5, size = rel(2)))+
      theme(axis.title.y = element_text(size = rel(1.4)))+
      theme(axis.title.x = element_text(size = rel(1.4)))+
      theme(axis.text.x = element_text(size = rel(1.6)))+
      theme(axis.text.y = element_text(size = rel(1.6)))+
      geom_hline(yintercept=2, colour="blue")+
      geom_hline(yintercept=-2, colour="blue")+
      geom_hline(yintercept=3, colour="red")+
      geom_hline(yintercept=-3, colour="red")
  
  ##Create residual plot with predicted values on x-axis and NORMAL DISTRIBUTION STANDARDIZED residuals on y-axis
    ##1st, find normal standardized residuals by taking residuals divided by Root Mean Square Error (RMSE).
      ##What was the RMSE?
        anova(modelMam)   ##MSE = 6974
          sqrt(6974)      ##RMSE = 83.51
    ##Compute normal standardized residuals
      outMamNames$stdNormResid <- outMamNames$.resid/83.51
    
    ##Residual plot with predicted values on x-axis and NORMAL STANDARDIZED residuals on y-axis
      ggplot(outMamNames, aes(x=.fitted, y=stdNormResid)) + geom_point(shape=16, size=3) + 
        labs(x = "Predicted Gestation",y="Normal Standardized Residuals",title="Normal Standardized Residual Plot")+
        theme_bw()+geom_hline(yintercept=0)+ylim(-5, 5)+
        geom_text(data=subset(outMamNames, .stdresid > 2),
                  aes(x=.fitted, y=.stdresid,label=x), vjust=1.5)+
        geom_text(data=subset(outMamNames, .stdresid < -2),   ## | means "or"
                  aes(x=.fitted, y=.stdresid,label=x), vjust=-5.5)+
        theme(plot.title = element_text(hjust=0.5, size = rel(2)))+
        theme(axis.title.y = element_text(size = rel(1.4)))+
        theme(axis.title.x = element_text(size = rel(1.4)))+
        theme(axis.text.x = element_text(size = rel(1.6)))+
        theme(axis.text.y = element_text(size = rel(1.6)))+
        geom_hline(yintercept=2, colour="blue")+
        geom_hline(yintercept=-2, colour="blue")+
        geom_hline(yintercept=3, colour="red")+
        geom_hline(yintercept=-3, colour="red")

  ##Boxplot of studentized residuals
    boxplot(outMam$.stdresid, ylab = "Standardized Residuals", main = "Boxplot of Standardized Residuals")

  ##Histogram of studentized residuals
    hist(outMam$.stdresid, main="Histogram of Standardized Residuals", xlab="Standardized Residuals")

  ##Leverage values = .hat values
    outMamNames
  
###Leverage cut-offs:
    ## n of IVs
      k <- 1
    ## Find n
      n <- nrow(mam)
  (lev.cutoff.low<-2*(k+1)/n)
  (lev.cutoff.high<-3*(k+1)/n)

##Create plot with leverage values on x-axis and studentized residuals on y-axis, size by Cook's D
  ggplot(outMamNames, aes(x=.hat, y=.stdresid, size=.cooksd)) + geom_point() + 
    labs(x = "Leverage Values",y="Studentized Residuals",title="Leverage and Influence Plot")+
    theme_bw()+geom_hline(yintercept=0)+xlim(0, .7)+ylim(-5, 5)+
    geom_vline(xintercept=lev.cutoff.low, colour="blue")+
    geom_vline(xintercept=lev.cutoff.high, colour="red")+
    geom_text(aes(x=0.19,y=-3.5,label="leverage cut-off=0.08",size=NULL),vjust=1.5)+
    geom_text(aes(x=0.23,y=-4.5,label="leverage cut-off=0.11",size=NULL),vjust=1.5)+
    theme(plot.title = element_text(hjust=0.5, size = rel(2)))+
    theme(axis.title.y = element_text(size = rel(1.4)))+
    theme(axis.title.x = element_text(size = rel(1.4)))+
    theme(axis.text.x = element_text(size = rel(1.6)))+
    theme(axis.text.y = element_text(size = rel(1.6)))+
    geom_hline(yintercept=2, colour="blue")+
    geom_hline(yintercept=-2, colour="blue")+
    geom_hline(yintercept=3, colour="red")+
    geom_hline(yintercept=-3, colour="red")+
    guides(size=guide_legend(title="Cook's D"))

  
##Create plot with leverage values on x-axis and studentized residuals on y-axis, size by Cook's D
  ##Add labels for Brazilian tapir, Okapi, and Man
  ggplot(outMamNames, aes(x=.hat, y=.stdresid, size=.cooksd)) + geom_point() + 
    labs(x = "Leverage Values",y="Studentized Residuals",title="Leverage and Influence Plot")+
    theme_bw()+geom_hline(yintercept=0)+xlim(0, .7)+ylim(-5, 5)+
    geom_vline(xintercept=lev.cutoff.low, colour="blue")+
    geom_vline(xintercept=lev.cutoff.high, colour="red")+
    geom_text(data=subset(outMamNames, .stdresid > 2 | .stdresid < -2),   ## | means "or"
              aes(x=.hat, y=.stdresid,label=x, size=NULL), vjust=.2, hjust=-.2)+
    geom_text(aes(x=0.19,y=-3.5,label="leverage cut-off=0.08",size=NULL),vjust=1.5)+
    geom_text(aes(x=0.23,y=-4.5,label="leverage cut-off=0.11",size=NULL),vjust=1.5)+
    theme(plot.title = element_text(hjust=0.5, size = rel(2)))+
    theme(axis.title.y = element_text(size = rel(1.4)))+
    theme(axis.title.x = element_text(size = rel(1.4)))+
    theme(axis.text.x = element_text(size = rel(1.6)))+
    theme(axis.text.y = element_text(size = rel(1.6)))+
    geom_hline(yintercept=2, colour="blue")+
    geom_hline(yintercept=-2, colour="blue")+
    geom_hline(yintercept=3, colour="red")+
    geom_hline(yintercept=-3, colour="red")+
    guides(size=guide_legend(title="Cook's D"))


##Analysis without Man
  ##Create subset of data with Man removed
  ##The outlier was in row 26
    mamNoMan = mam[-26,]
  
  ##Correlation
    cor(mamNoMan$BrainWeight, mamNoMan$GestationTime)
    ##r=.78 (compared with .62)
  
  ##Model
    modelMamNoMan <- lm(GestationTime~BrainWeight, data=mamNoMan)
    summary(modelMamNoMan)
  
  ##Scatterplot with both regression lines (with and without man)
    d=data.frame(s=c(modelMam$coefficients[2], modelMamNoMan$coefficients[2]), 
               ic=c(modelMam$coefficients[1], modelMamNoMan$coefficients[1]), 
               RegressionLine=c('Man', 'No Man'))
    ggplot(mam, aes(x=BrainWeight, y=GestationTime)) + geom_point(shape=16, size=3) + 
      labs(x = "Brain Weight in Grams",y="Gestation Time in Days", title="Gestation Time vs Brain Weight")+theme_bw()+
      theme(plot.title = element_text(hjust=0.5, size = rel(2)))+    ##Change size of text in title
      theme(axis.title.y = element_text(size = rel(1.4)))+    ##Change size of label text in y-axis label
      theme(axis.title.x = element_text(size = rel(1.4)))+    ##Change size of label text in x-axis label
      theme(axis.text.x = element_text(size = rel(1.6)))+    ##Change size of tick text in y-axis label
      theme(axis.text.y = element_text(size = rel(1.6)))+    ##Change size of tick text in x-axis label
      geom_abline(aes(intercept=ic, slope=s, colour=RegressionLine), data=d, show.legend=TRUE)+
      guides(color=guide_legend(title="Regression Line"))
    
    
    
    
##Multiple Regression Model
    modelMamMult <- lm(GestationTime~BrainWeight+BodyWeight+TotalSleep+LifeSpan, data=mam)
    summary(modelMamMult)
    
  ##Create a data frame including results from the lm() function
    outMamMult = fortify(modelMamMult)
    head(outMamMult)

  ##Names of mammals are in the mam data frame, not in the outMamMult data frame.
    ##We need to merge the names into the outMam data frame.
    outMamNamesMult <- merge(mam$Species, outMamMult, by ="row.names")  ##Note that outMamNames$x = mam$Species
    outMamNamesMult <- outMamNamesMult[order(outMamNamesMult$x),]   ##Merging changes the order of the rows, this sorts it alphabetical again.
    head(outMamNamesMult)
   
    str(outMamNamesMult) ##First row of outupt shows how many observations are in this dataset
    ##The sample size is no longer 53 because there is missing data.
    ##n=47
    
  ###Leverage cut-offs:
      ## n of IVs
        k <- 4
      ## Find n
        n <- nrow(mam)
    (lev.cutoff.low.mult<-2*(k+1)/n)
    (lev.cutoff.high.mult<-3*(k+1)/n)
    
  ##Create plot with leverage values on x-axis and STANDARDIZED residuals on y-axis, size by Cook's D
    ggplot(outMamNamesMult, aes(x=.hat, y=.stdresid, size=.cooksd)) + geom_point() + 
      labs(x = "Leverage Values",y="Studentized Residuals",title="Leverage and Influence Plot",subtitle="Multiple Regression Model")+
      theme_bw()+geom_hline(yintercept=0)+xlim(0, 1)+ylim(-5, 5)+
      geom_vline(xintercept=lev.cutoff.low.mult, colour="blue")+
      geom_vline(xintercept=lev.cutoff.high.mult, colour="red")+
      geom_text(data=subset(outMamNamesMult, .stdresid > 2 | .stdresid < -2),   ## | means "or"
                aes(x=.hat, y=.stdresid,label=x, size=NULL), vjust=.2, hjust=-.2)+
      geom_text(data=subset(outMamNamesMult, .hat > lev.cutoff.low.mult),
                aes(x=.hat, y=.stdresid,label=x, size=NULL), vjust=.2, hjust=-.2)+
      geom_text(data=subset(outMamNamesMult, .cooksd > .5),
                aes(x=.hat, y=.stdresid,label=x, size=NULL), vjust=.2, hjust=-.2)+
      geom_text(aes(x=0.15,y=-3.8,label="leverage cut-off=0.21",size=NULL),vjust=1.5)+
      geom_text(aes(x=0.43,y=-4.5,label="leverage cut-off=0.32",size=NULL),vjust=1.5)+
      theme(plot.title = element_text(hjust=0.5, size = rel(2)))+
      theme(plot.subtitle = element_text(hjust=0.5, size = rel(1.4)))+
      theme(axis.title.y = element_text(size = rel(1.4)))+
      theme(axis.title.x = element_text(size = rel(1.4)))+
      theme(axis.text.x = element_text(size = rel(1.6)))+
      theme(axis.text.y = element_text(size = rel(1.6)))+
      geom_hline(yintercept=2, colour="blue")+
      geom_hline(yintercept=-2, colour="blue")+
      geom_hline(yintercept=3, colour="red")+
      geom_hline(yintercept=-3, colour="red")+
      guides(size=guide_legend(title="Cook's D"))
    